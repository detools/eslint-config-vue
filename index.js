module.exports = {
  extends: ['eslint-config-airbnb-base', 'plugin:vue/essential'],
  parser: 'vue-eslint-parser',
  parserOptions: {
    parser: '@babel/eslint-parser',
    sourceType: 'module',
    ecmaVersion: 2020,
    allowImportExportEverywhere: false,
  },
  env: {
    browser: true,
    node: true,
    es6: true,
  },
  plugins: ['vue'],
  rules: {
    'arrow-parens': ['error', 'as-needed'],
    'comma-dangle': [
      'error',
      {
        arrays: 'always-multiline',
        objects: 'always-multiline',
        imports: 'always-multiline',
        exports: 'always-multiline',
        // Trailing commas in functions are allowed only in ES8
        // https://github.com/eslint/eslint/issues/7809
        functions: 'never',
      },
    ],
    indent: 'off', // This rule introduces an error in Vue projects since eslint 7
    'template-curly-spacing': 'off', // This rule introduces an error in Vue projects since eslint 7
    'consistent-return': 'off',
    'eol-last': 'off',
    'function-paren-newline': ['off'],
    'global-require': 'off',
    'implicit-arrow-linebreak': 'off',
    'max-len': [2, 100],
    'no-await-in-loop': 'off',
    'no-confusing-arrow': 'off',
    'no-console': 'error',
    'no-param-reassign': 'off',
    'no-restricted-syntax': ['error', 'ForInStatement', 'LabeledStatement', 'WithStatement'],
    'no-return-assign': 'off',
    'no-unused-expressions': ['error', { allowTernary: true }],
    'no-unused-vars': ['error', { argsIgnorePattern: '^h$' }],
    'no-use-before-define': 'off',
    'object-curly-newline': 'off',
    'operator-linebreak': 'off',
    'prefer-promise-reject-errors': 'off',
    'quote-props': ['error', 'as-needed'],
    semi: ['error', 'never'],
    'import/extensions': 'off',
    'import/no-extraneous-dependencies': 'off',
    'import/no-named-as-default': 'off',
    'import/no-named-as-default-member': 'off',
    'import/no-unresolved': 'off',
  },
  globals: {
    jest: false,
    describe: false,
    it: false,
    test: false,
    expect: false,
    beforeAll: false,
    beforeEach: false,
    afterAll: false,
    afterEach: false,
    cy: false,
    context: false,
  },
}
